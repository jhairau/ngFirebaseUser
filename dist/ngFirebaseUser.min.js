/**
 * Angular Module for Firebase 1.1+ authentication & user management
 * @version v0.0.1 - 2015-07-31
 * @link https://github.com/jhairau/ngFirebaseUser
 * @author Johnathan Hair <johnathan.hair.au@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */!function(a,b,c){b.module("ngFirebaseUser",["firebase","ui.router"]).provider("ngFirebaseUserConfig",function(){var a={firebaseUrl:null,firebaseUserPath:"user",firebaseDataPath:"data",redirectPath:"/",angularUserNamespace:"user",routing:!1,routeAccess:"private",routeRedirect:"login",templatePath:"templates/bootstrap3"};return this.setConfig=function(c){b.extend(a,c)},this.getConfig=function(){return a},this.getConfigValue=function(b){return a[b]?a[b]:(console.log("The key: "+b+"does not exist"),!1)},this.$get=function(){return{get:this.getConfigValue}},this}).run(["$rootScope","ngFirebaseUserUser","$state","ngFirebaseUserConfig",function(a,b,c,d){if(d.get("routing")){var e;a.$on("$stateChangeStart",function(b,f,g,h,i){e!=f.name?(b.preventDefault(),waitForAuth.then(function(){f[d.get("routeAccess")]&&!a[d.get("dataLocation")].userInfo?c.go(d.get("routeRedirect")):(e=f.name,c.go(f.name,g))})):e=!1})}}]),b.module("ngFirebaseUser").service("ngFirebaseUserUser",function(a,b,c,d,e){var f=this,g=null,h=new Firebase(c.get("firebaseUrl")),i=(h.child(c.get("firebaseUserPath")),d(h));this.EVENTS={USER_LOGIN_SUCCESS:"ngFirebaseUser:login_success",USER_LOGIN_ERROR:"ngFirebaseUser:login_error",USER_LOGOUT:"ngFirebaseUser:logout",USER_CREATED_SUCCESS:"ngFirebaseUser:user_created_success",USER_CREATED_ERROR:"ngFirebaseUser:user_created_error",USER_UPDATED:"ngFirebaseUser:user_updated",USER_LOADED_SUCCESS:"ngFirebaseUser:user_loaded_success",USER_LOADED_ERROR:"ngFirebaseUser:user_loaded_error"},i.$onAuth(function(b){b?(a.$broadcast(f.EVENTS.USER_LOGIN_SUCCESS),f.loadUser(b.uid)):(a.$broadcast(f.EVENTS.USER_LOGOUT),g())});return this.loginEmail=function(c,d){var e=b.defer();return i.$authWithPassword({email:c,password:d}).then(function(a){e.resolve(a.uid)})["catch"](function(b){e.reject(b),a.$broadcast(f.EVENTS.USER_LOGIN_ERROR)}),e.promise},this.logout=function(){return i.$unauth(),null},this.changePassword=function(a,b,c){i.$changePassword({email:a,oldPassword:b,newPassword:c}).then(function(){console.log("Password changed successfully!")})["catch"](function(a){console.error("Error: ",a)})},this.sendPasswordResetEmail=function(a){return i.$resetPassword({email:a})},this.changeEmail=function(a,b,c){return i.$changeEmail({oldEmail:a,newEmail:b,password:c})},this.createUser=function(a,b){return i.$createUser({email:a,password:b})},this.waitForAuth=function(){return i.$waitForAuth()},this.requireAuth=function(){return i.$requireAuth()},this})}(window,window.angular);